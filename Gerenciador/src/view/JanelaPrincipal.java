package view;

import controller.GerenciadorTurma;
import controller.GerenciadorDAO;
import javax.swing.JOptionPane;
import model.Turma;
import static view.Principal.turma;

public class JanelaPrincipal extends javax.swing.JFrame {

    public JanelaPrincipal() {

        initComponents();
        String id = Principal.turma.getId() == 0 ? "" : "" + Principal.turma.getId();
        campoNomeTurma.setText(Principal.turma.getNomeTurma());
        campoProfessor.setText(Principal.turma.getProfessor());
        campoTurno.setText(Principal.turma.getTurno());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        campoNomeTurma = new javax.swing.JTextField();
        campoProfessor = new javax.swing.JTextField();
        campoTurno = new javax.swing.JTextField();
        adicionar = new javax.swing.JButton();
        remover = new javax.swing.JButton();
        listar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        atualizar = new javax.swing.JButton();
        buscar = new javax.swing.JButton();
        limpar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        campoNomeTurma.setText("Nome da Turma");

        campoProfessor.setText("Professor");

        campoTurno.setText("Turno");

        adicionar.setText("Adicionar");
        adicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarActionPerformed(evt);
            }
        });

        remover.setText("Remover");
        remover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removerActionPerformed(evt);
            }
        });

        listar.setText("Listar");
        listar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarActionPerformed(evt);
            }
        });

        jLabel1.setText("Turma:");

        jLabel2.setText("Professor:");

        jLabel3.setText("Turno:");

        atualizar.setText("Atualizar");
        atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarActionPerformed(evt);
            }
        });

        buscar.setText("Buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        limpar.setText("Limpar");
        limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(8, 8, 8))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoNomeTurma, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                            .addComponent(campoProfessor)
                            .addComponent(campoTurno)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(adicionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(remover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(atualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(listar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(limpar, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(12, 12, 12)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoNomeTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoTurno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscar)
                    .addComponent(atualizar)
                    .addComponent(listar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(limpar)
                    .addComponent(remover)
                    .addComponent(adicionar))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void adicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarActionPerformed
        // TODO add your handling code here:

        if (campoNomeTurma.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "O campo nome é obrigatório!");
        } else {
            if (campoProfessor.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "O campo fone é obrigatório!");
            } else {
                if (campoTurno.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "O campo email é obrigatório!");
                } else {
                    Principal.turma.setNomeTurma(campoNomeTurma.getText());
                    Principal.turma.setProfessor(campoProfessor.getText());
                    Principal.turma.setTurno(campoTurno.getText());
                    boolean inseriu = Principal.gerenciadorDao.inserir(Principal.turma);

                    Principal.gerenciadorTurma.adicionarTurma(turma);

                    if (inseriu) {
                        JOptionPane.showMessageDialog(this, "Turma cadastrada com sucesso!");
                        campoNomeTurma.setText("");
                        campoProfessor.setText("");
                        campoTurno.setText("");
                    } else {
                        JOptionPane.showMessageDialog(this, "Falha ao cadastrar a turma!");
                    }

                }
            }
        }


    }//GEN-LAST:event_adicionarActionPerformed

    private void removerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removerActionPerformed
        // TODO add your handling code here:

        if (campoNomeTurma.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "O campo turma  é obrigatório!");
        } else {
            try {

                boolean sucesso = Principal.gerenciadorDao.excluir(Principal.turma.getId());

                if (sucesso) {
                    JOptionPane.showMessageDialog(this, "Turma removida com sucesso!");
                } else {
                    JOptionPane.showMessageDialog(this, "Turma não encontrada!", "Erro", JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "O campo id somente aceita número!");
            }

        }

    }//GEN-LAST:event_removerActionPerformed

    private void listarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarActionPerformed
        // TODO add your handling code here:
        //Principal.turmas = Principal.gerenciadorTurma.listarTurma(); Duplica a ultima turma inclusa.
        Principal.turmas = Principal.gerenciadorDao.getTurmas();

        if (Principal.turmas.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nenhum contato cadastrado, cadastre um primeiro!");
        } else {
            JanelaListagem janelaListagem = new JanelaListagem();
            janelaListagem.setVisible(true);
            janelaListagem.setLocationRelativeTo(null);
            this.dispose();
        }


    }//GEN-LAST:event_listarActionPerformed

    private void atualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarActionPerformed
        // TODO add your handling code here:
        if (campoNomeTurma.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "O campo nome é obrigatório!");
        } else {
            if (campoProfessor.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "O campo fone é obrigatório!");
            } else {
                if (campoTurno.getText().isEmpty()) {
                    JOptionPane.showMessageDialog(this, "O campo email é obrigatório!");
                } else {
                    Principal.turma.setNomeTurma(campoNomeTurma.getText());
                    Principal.turma.setProfessor(campoProfessor.getText());
                    Principal.turma.setTurno(campoTurno.getText());
                    boolean atualizou = Principal.gerenciadorDao.atualizar(Principal.turma);
                    if (atualizou) {
                        JOptionPane.showMessageDialog(this, "Turma atualizada! ");
                    } else {
                        JOptionPane.showMessageDialog(this, "Falha na atualização! ");

                    }
                }

            }

        }


    }//GEN-LAST:event_atualizarActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        // TODO add your handling code here:
        if (campoNomeTurma.getText().isEmpty()) {
            JOptionPane.showMessageDialog (this, "O nome da turma é obrigatório!");
        } else {
            Principal.turma.setNomeTurma(campoNomeTurma.getText());
            Turma turma = new Turma ();
            Principal.turmas = Principal.gerenciadorDao.buscar(Principal.turma.getNomeTurma());
            if (Principal.turmas.size() == 0){
                JOptionPane.showMessageDialog(this, "Turma não encontrada!");
            } else {
                JanelaListagem janelaListagem = new JanelaListagem ();
                janelaListagem.setVisible(true);
                janelaListagem.setLocationRelativeTo(null);
                this.dispose();
            }
            
        }
        
    }//GEN-LAST:event_buscarActionPerformed

    private void limparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparActionPerformed
        // TODO add your handling code here:
        
        campoNomeTurma.setText("");
        campoProfessor.setText ("");
        campoTurno.setText("");
    }//GEN-LAST:event_limparActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new JanelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adicionar;
    private javax.swing.JButton atualizar;
    private javax.swing.JButton buscar;
    private javax.swing.JTextField campoNomeTurma;
    private javax.swing.JTextField campoProfessor;
    private javax.swing.JTextField campoTurno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton limpar;
    private javax.swing.JButton listar;
    private javax.swing.JButton remover;
    // End of variables declaration//GEN-END:variables
}
